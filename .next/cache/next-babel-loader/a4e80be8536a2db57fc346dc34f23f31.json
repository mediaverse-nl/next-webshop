{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AuthService =\n/*#__PURE__*/\nfunction () {\n  function AuthService(domain) {\n    var _this = this;\n\n    _classCallCheck(this, AuthService);\n\n    _defineProperty(this, \"fetch\", function (url, options) {\n      // performs api calls sending the required authentication headers\n      var headers = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      };\n\n      if (_this.loggedIn()) {\n        headers['Authorization'] = 'Bearer ' + _this.getToken();\n      }\n\n      var ComHeaders = _objectSpread({}, headers, {}, options);\n\n      console.log(url, 'url'); // console.log([...headers, ...options], 'header');\n\n      return fetch(url, ComHeaders) // .then(this._checkStatus)\n      .then(function (response) {\n        if (response.status >= 200 && response.status < 300) {\n          console.log('no error');\n          return response.json();\n        } else if (response.status >= 422) {\n          console.log('fields are incorrect');\n          return response.json();\n        } else {\n          console.log('error');\n          return response;\n        }\n      }); //  .then(response => {\n      //     return response;\n      // })\n    });\n\n    this.domain = domain || 'https://api.mediaverse-dev.nl'; // this.fetch = this.fetch.bind(this)\n\n    this.login = this.login.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(email, password) {\n      // ?email=${email}&password=${password}\n      return this.fetch(\"/shop/api/v1/login\", {\n        method: 'POST',\n        body: _JSON$stringify({\n          email: email,\n          password: password\n        })\n      }).then(function (response) {\n        // The response is a Response instance.\n        // You parse the data into a useable format using `.json()`\n        return response;\n      }); //     .then(function(data) {\n      //     // `data` is the parsed version of the JSON returned from the above endpoint.\n      //     console.log(data);  // { \"userId\": 1, \"id\": 1, \"title\": \"...\", \"body\": \"...\" }\n      // });\n    }\n  }, {\n    key: \"loggedIn\",\n    value: function loggedIn() {\n      // Checks if there is a saved token and it's still valid\n      var token = this.getToken();\n      return !!token; // && !isTokenExpired(token) // handwaiving here\n    }\n  }, {\n    key: \"setProfile\",\n    value: function setProfile(profile) {\n      // Saves profile data to localStorage\n      localStorage.setItem('profile', _JSON$stringify(profile));\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile() {\n      // Retrieves the profile data from localStorage\n      var profile = localStorage.getItem('profile');\n      return profile ? JSON.parse(localStorage.profile) : {};\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(idToken) {\n      // Saves user token to localStorage\n      localStorage.setItem('id_token', idToken);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      // Retrieves the user token from localStorage\n      return localStorage.getItem('id_token');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear user token and profile data from localStorage\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('profile');\n    }\n  }, {\n    key: \"_checkStatus\",\n    value: function _checkStatus(response) {\n      console.log('error check'); // raises an error in case response status is not a success\n\n      if (response.status >= 200 && response.status < 300) {\n        console.log('no error');\n        return response;\n      } else {\n        console.log('error for sure');\n        var error = response;\n        console.log('error for sure', error);\n        error.response = response;\n        console.log('end error for sure');\n        throw error;\n      }\n    }\n  }]);\n\n  return AuthService;\n}();\n\nexport { AuthService as default };","map":{"version":3,"sources":["C:/Projects/test-test/utils/AuthService.js"],"names":["AuthService","domain","url","options","headers","loggedIn","getToken","ComHeaders","console","log","fetch","then","response","status","json","login","bind","getProfile","email","password","method","body","token","profile","localStorage","setItem","getItem","JSON","parse","idToken","removeItem","error"],"mappings":"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","sourcesContent":["export default class AuthService {\r\n    constructor(domain) {\r\n        this.domain = domain || 'https://api.mediaverse-dev.nl'\r\n        // this.fetch = this.fetch.bind(this)\r\n        this.login = this.login.bind(this)\r\n        this.getProfile = this.getProfile.bind(this)\r\n    }\r\n\r\n    login(email, password) {\r\n            // ?email=${email}&password=${password}\r\n        return this.fetch(`/shop/api/v1/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        })\r\n        .then(function(response) {\r\n            // The response is a Response instance.\r\n            // You parse the data into a useable format using `.json()`\r\n            return response;\r\n        })\r\n        //     .then(function(data) {\r\n        //     // `data` is the parsed version of the JSON returned from the above endpoint.\r\n        //     console.log(data);  // { \"userId\": 1, \"id\": 1, \"title\": \"...\", \"body\": \"...\" }\r\n        // });\r\n    }\r\n\r\n    loggedIn(){\r\n        // Checks if there is a saved token and it's still valid\r\n        const token = this.getToken()\r\n        return !!token;\r\n            // && !isTokenExpired(token) // handwaiving here\r\n    }\r\n\r\n    setProfile(profile){\r\n        // Saves profile data to localStorage\r\n        localStorage.setItem('profile', JSON.stringify(profile))\r\n    }\r\n\r\n    getProfile(){\r\n        // Retrieves the profile data from localStorage\r\n        const profile = localStorage.getItem('profile')\r\n        return profile ? JSON.parse(localStorage.profile) : {}\r\n    }\r\n\r\n    setToken(idToken){\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken)\r\n    }\r\n\r\n    getToken(){\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token')\r\n    }\r\n\r\n    logout(){\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n        localStorage.removeItem('profile');\r\n    }\r\n\r\n    _checkStatus(response) {\r\n        console.log('error check')\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            console.log('no error')\r\n            return response\r\n        } else {\r\n            console.log('error for sure')\r\n            var error = response\r\n            console.log('error for sure', error)\r\n\r\n            error.response = response\r\n\r\n            console.log('end error for sure')\r\n\r\n            throw error\r\n        }\r\n    }\r\n\r\n    fetch = (url, options) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n\r\n        if (this.loggedIn()){\r\n           headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n        const ComHeaders = {...headers, ...options};\r\n\r\n        console.log(url, 'url');\r\n        // console.log([...headers, ...options], 'header');\r\n        return fetch(url, ComHeaders)\r\n            // .then(this._checkStatus)\r\n            .then(response => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    console.log('no error')\r\n                    return response.json();\r\n                }else if(response.status >= 422){\r\n                    console.log('fields are incorrect')\r\n                    return response.json()\r\n                }  else {\r\n                    console.log('error')\r\n                    return response\r\n                }\r\n            })\r\n            //  .then(response => {\r\n            //     return response;\r\n            // })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}